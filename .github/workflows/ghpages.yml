name       : Sphinx ghpages
on         :
  push:
    branches:
      - main

  workflow_dispatch:

env        :
  PY_VER       : '3.11'
  PERU_VER     : '1.3.1'
  AWS_REGION   : ap-southeast-1
  INSTANCE_NAME: thy1
  PORT_INFO    : fromPort=22,protocol=TCP,toPort=22

permissions:
  contents: read
  pages   : write
  id-token: write

concurrency:
  group             : "ghpages"
  cancel-in-progress: true

jobs       :

  deploy_sphinx:
    #    if     : endsWith(github.repository, '.github.io')
    environment:
      name: github-pages
      url : ${{ steps.deployment.outputs.page_url }}
    runs-on    : ubuntu-latest
    steps      :
      - name: Checkout
        uses: actions/checkout@v3

      # Python
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PY_VER }}

      - name: Update pip
        run : pip install -U pip wheel setuptools

      - name: peru sync
        run : |
          pip install "peru~=${{ env.PERU_VER }}"
          peru sync --no-cache --force -j 2

      # https://github.com/actions/cache/blob/main/examples.md#using-pip-to-get-cache-location
      - name: Get pip cache dir
        id  : pip-cache
        run : echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: pip cache
        uses: actions/cache@v3
        with:
          path        : ${{ steps.pip-cache.outputs.dir }}
          key         : ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: pip install
        run : pip install -r requirements.txt

      # Sphinx
      - name: Run sphinx-build html
        run : sphinx-build -M html . ${{ runner.temp }}/thumpcc_build

      # Github Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: '${{ runner.temp }}/thumpcc_build/html'

      - name: Deploy to GitHub Pages
        id  : deployment
        uses: actions/deploy-pages@v1
